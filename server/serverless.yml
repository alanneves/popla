service: popla

package:
  exclude:
    - .dynamodb/**

frameworkVersion: '3'

provider:
  name: aws
  region: sa-east-1
  runtime: nodejs16.x
  architecture: arm64
  memorySize: 1024
  logRetentionInDays: 7
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - 'dynamodb:*'
          Resource:
            - { "Fn::GetAtt": ["tableGame", "Arn" ] }
        - Effect: 'Allow'
          Action:
            - 'lambda:InvokeFunction'
          Resource:
            - '*'
        - Effect: 'Allow'
          Action:
            - 'execute-api:Invoke'
          Resource:
            - '*'
functions:
  healthCheck:
    handler: src/functions/healthCheck.lambda
    events:
      - httpApi:
          path: /v1/health/check
          method: GET

  createGame:
    handler: src/functions/game/create.lambda
    events:
      - httpApi:
          path: /v1/game
          method: POST

  getGame:
    handler: src/functions/game/get.lambda
    events:
      - httpApi:
          path: /v1/game/{id}
          method: GET

  joinGame:
    handler: src/functions/game/join.lambda
    events:
      - httpApi:
          path: /v1/game/{id}/join
          method: POST

  websocket:
    handler: src/functions/game/websocket.lambda
    events:
      - websocket:
          route: $connect

      - websocket:
          route: $default

      - websocket:
          route: $disconnect
plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  dynamodb:
    start:
      port: 8000
      migrate: true
      seed: true
      convertEmptyValues: true
    stages:
      - dev
    seed:
      domain:
        sources:
          - table: Game
            sources: [./database/data/Game.json]

resources:
  - ${file(database/tables.yml)}
